from pymongo import MongoClient
from dotenv import load_dotenv
from os import environ
import certifi
from pprint import pprint
from bson.objectid import ObjectId
load_dotenv()

key = environ ['MONGODB_CONNECTION_STRING']

client = MongoClient(key, tlsCAFile=certifi.where())
db = client.wcoding

doc = {
    'name': 'Thatiany',
    'message': 'Hey sup!'
}

# insert a single document into the collection called "test"
# db.test.insert_one(doc)

# find a SINGLE document from our collection
# _id is auto-generated by PyMongo and is unique to every document
# doc = db.test.find_one({'name': 'Thatiany'})
# doc = db.test.find_one({'_id': ObjectId('61bd766b881fe7680cf78c0e')})
# pprint(doc)

# finding multiple documents from out collection
# specify the query in the first dictionary argument

# docs = db.test.find({'name': 'Tierra Thompson'})

# for doc in docs:
#     print(doc)

#  some example ObjectIds
# 61b9d713d17b5b25c51f8cdf
# 61b9d720947e6fdaf0b42916
# 61b9de1cf67b9d185fa55635
# 61beb27e2d298a9f6b124b43

# db.test.update_one(
#     {
#         '_id': ObjectId('61bd766b881fe7680cf78c0e')
#         }, # how do we know which document to update? (finding the document)
#     {
#         '$set': {
#             'name': 'Jim Jones',
#             'message': 'Goodbye!!!',
#             'age': 25,
#             'hobbies': [ 'Games', 'Spiderman', 'Movies']
#         }
#     }, # how to actually update that document (telling pymongo how we want to update the document)
# )
# # doc =
# db.test.find_one({'_id': ObjectId('61bd766b881fe7680cf78c0e')})

# pprint(doc)

#example of deleting one document from the database
# res = db.test.delete_one({'_id': ObjectId('61bd766b881fe7680cf78c0e')})
# print(res.acknowledged) # value has to be True
# print(res.deleted_count) # value has to be 1 
# if values correct it means your request was sucessful